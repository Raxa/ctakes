3.1.7 (Brainy Betty)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@has_childrenT:
@linei:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@options{ :@children[o:Sass::Tree::ImportNode
;i;0:@imported_filename"shared;	@;
[ o:Sass::Tree::CommentNode:@value"ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */:@silenti ;i:@lines[ ;	@:
@loud0;
[ o:Sass::Tree::VariableNode:@guarded"!default;i:
@expro:Sass::Script::String	:
@type:identifier;"all;i;	@;	@;
[ :
@name" default-transition-propertyo;;"!default;i;o:Sass::Script::Number:@denominator_units[ ;i;i:@numerator_units["s;	@:@original"1s;	@;
[ ;" default-transition-durationo;;"!default;i;o:Sass::Script::Bool;F;i;	@;	@;
[ ;" default-transition-functiono;;"!default;i;o;;F;i;	@;	@;
[ ;"default-transition-delayo;;"!default;i;o:Sass::Script::List	;[o;	;;;"transform;i;	@o;	;;;"transform-origin;i;	@;i:@separator:
comma;	@;	@;
[ ;"#transitionable-prefixed-valueso;;"}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;i ;i!;[ ;	@;0;
[ o:Sass::Tree::MixinDefNode;T;i0;	@;
[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@linei1:@keywords{ :@options{ :
@args[o:Sass::Script::Variable	;i1;
@	:@underscored_name"property_1:
@name"property-1;"type-of;i1:@operator:eq;
@	:@operand2o:Sass::Script::String	:
@type:identifier:@value"string;i1;
@	0[o:Sass::Tree::VariableNode:@guarded0;i1:
@expro;
;i1;	{ ;
@	;[o;	;i1;
@	;"property_1;"property-1;"unquote;
@	:@children[ ;"property-1o;;0;i2;o:Sass::Script::Funcall
;i2:@keywords{ ;	@:
@args[o:Sass::Script::Variable	;i2;	@:@underscored_name"property_1;"property-1o;&	;i2;	@;'"property_2;"property-2o;&	;i2;	@;'"property_3;"property-3o;&	;i2;	@;'"property_4;"property-4o;&	;i2;	@;'"property_5;"property-5o;&	;i2;	@;'"property_6;"property-6o;&	;i2;	@;'"property_7;"property-7o;&	;i2;	@;'"property_8;"property-8o;&	;i2;	@;'"property_9;"property-9o;&	;i2;	@;'"property_10;"property-10;"compact;	@;
[ ;"propertiesu;"¼[o:Sass::Script::Variable	:
@linei3:@options{ :@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit0[o:Sass::Tree::PropNode:
@tabsi :@prop_syntax:new:@valueo:Sass::Script::Funcall
;i3:@keywords{ ;@:
@args[o:Sass::Script::String	:
@type:identifier;"-webkit;i3;@o; 	;i3;@;"properties;	"properties;	"prefixed-for-transition;i3;@:@children[ ;	[" -webkit-transition-propertyu;"¸[o:Sass::Script::Variable	:
@linei4:@options{ :@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla0[o:Sass::Tree::PropNode:
@tabsi :@prop_syntax:new:@valueo:Sass::Script::Funcall
;i4:@keywords{ ;@:
@args[o:Sass::Script::String	:
@type:identifier;"	-moz;i4;@o; 	;i4;@;"properties;	"properties;	"prefixed-for-transition;i4;@:@children[ ;	["-moz-transition-propertyu;"°[o:Sass::Script::Variable	:
@linei5:@options{ :@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera0[o:Sass::Tree::PropNode:
@tabsi :@prop_syntax:new:@valueo:Sass::Script::Funcall
;i5:@keywords{ ;@:
@args[o:Sass::Script::String	:
@type:identifier;"-o;i5;@o; 	;i5;@;"properties;	"properties;	"prefixed-for-transition;i5;@:@children[ ;	["-o-transition-propertyo:Sass::Tree::PropNode:
@tabsi :@prop_syntax:new;o;&	;i6;	@;'"properties;"properties;i6;	@;
[ ;["transition-property;%[[o;&;	{ ;'"property_1;"property-1o;&	;i&;	@l;'" default_transition_property;" default-transition-property[o;&;	@l;'"property_2;"property-2o;;F;i';	@l[o;&;	@l;'"property_3;"property-3o;;F;i(;	@l[o;&;	@l;'"property_4;"property-4o;;F;i);	@l[o;&;	@l;'"property_5;"property-5o;;F;i*;	@l[o;&;	@l;'"property_6;"property-6o;;F;i+;	@l[o;&;	@l;'"property_7;"property-7o;;F;i,;	@l[o;&;	@l;'"property_8;"property-8o;;F;i-;	@l[o;&;	@l;'"property_9;"property-9o;;F;i.;	@l[o;&;	@l;'"property_10;"property-10o;;F;i/;	@l;"transition-propertyo;;"¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;i ;i9;[ ;	@;0;
[ o;!;T;iH;	@;
[u;"Í[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@lineiI:@keywords{ :@options{ :
@args[o:Sass::Script::Variable	;iI;
@	:@underscored_name"duration_1:
@name"duration-1;"type-of;iI:@operator:eq;
@	:@operand2o:Sass::Script::String	:
@type:identifier:@value"string;iI;
@	0[o:Sass::Tree::VariableNode:@guarded0;iI:
@expro;
;iI;	{ ;
@	;[o;	;iI;
@	;"duration_1;"duration-1;"unquote;
@	:@children[ ;"duration-1o;;0;iJ;o;#
;iJ;${ ;	@;%[o;&	;iJ;	@;'"duration_1;"duration-1o;&	;iJ;	@;'"duration_2;"duration-2o;&	;iJ;	@;'"duration_3;"duration-3o;&	;iJ;	@;'"duration_4;"duration-4o;&	;iJ;	@;'"duration_5;"duration-5o;&	;iJ;	@;'"duration_6;"duration-6o;&	;iJ;	@;'"duration_7;"duration-7o;&	;iJ;	@;'"duration_8;"duration-8o;&	;iJ;	@;'"duration_9;"duration-9o;&	;iJ;	@;'"duration_10;"duration-10;"compact;	@;
[ ;"durationso:Sass::Tree::MixinNode;iM;${ ;	@;
[ ;%[o;	;;;"transition-duration;iK;	@o;&	;iK;	@;'"durations;"durationso;	;;;"	-moz;iL;	@o;	;;;"-webkit;iL;	@o;	;;;"-o;iL;	@o:!Sass::Script::UnaryOperation	:@operando;	;;;"-ms;iL;	@;iL:@operator:not;	@o;-	;.o;	;;;"-khtml;iL;	@;iL;/;0;	@o;	;;;"official;iL;	@;"experimental;%[[o;&;	{ ;'"duration_1;"duration-1o;&	;i>;	@â;'" default_transition_duration;" default-transition-duration[o;&;	@â;'"duration_2;"duration-2o;;F;i?;	@â[o;&;	@â;'"duration_3;"duration-3o;;F;i@;	@â[o;&;	@â;'"duration_4;"duration-4o;;F;iA;	@â[o;&;	@â;'"duration_5;"duration-5o;;F;iB;	@â[o;&;	@â;'"duration_6;"duration-6o;;F;iC;	@â[o;&;	@â;'"duration_7;"duration-7o;;F;iD;	@â[o;&;	@â;'"duration_8;"duration-8o;;F;iE;	@â[o;&;	@â;'"duration_9;"duration-9o;;F;iF;	@â[o;&;	@â;'"duration_10;"duration-10o;;F;iG;	@â;"transition-durationo;;"õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;i ;iP;[ ;	@;0;
[ o;!;T;i`;	@;
[o;;0;ia;o;#
;ia;${ ;	@;%[o;&	;ia;	@;'"function_1;"function-1;"unquote;	@;
[ ;"function-1o;;0;ib;o;#
;ib;${ ;	@;%[o;&	;ib;	@;'"function_1;"function-1o;&	;ib;	@;'"function_2;"function-2o;&	;ib;	@;'"function_3;"function-3o;&	;ib;	@;'"function_4;"function-4o;&	;ib;	@;'"function_5;"function-5o;&	;ib;	@;'"function_6;"function-6o;&	;ib;	@;'"function_7;"function-7o;&	;ib;	@;'"function_8;"function-8o;&	;ib;	@;'"function_9;"function-9o;&	;ib;	@;'"function_10;"function-10;"compact;	@;
[ ;"functionso;,;ie;${ ;	@;
[ ;%[o;	;;;"transition-timing-function;ic;	@o;&	;ic;	@;'"functions;"functionso;	;;;"	-moz;id;	@o;	;;;"-webkit;id;	@o;	;;;"-o;id;	@o;-	;.o;	;;;"-ms;id;	@;id;/;0;	@o;-	;.o;	;;;"-khtml;id;	@;id;/;0;	@o;	;;;"official;id;	@;"experimental;%[[o;&;	{ ;'"function_1;"function-1o;&	;iV;	@f;'" default_transition_function;" default-transition-function[o;&;	@f;'"function_2;"function-2o;;F;iW;	@f[o;&;	@f;'"function_3;"function-3o;;F;iX;	@f[o;&;	@f;'"function_4;"function-4o;;F;iY;	@f[o;&;	@f;'"function_5;"function-5o;;F;iZ;	@f[o;&;	@f;'"function_6;"function-6o;;F;i[;	@f[o;&;	@f;'"function_7;"function-7o;;F;i\;	@f[o;&;	@f;'"function_8;"function-8o;;F;i];	@f[o;&;	@f;'"function_9;"function-9o;;F;i^;	@f[o;&;	@f;'"function_10;"function-10o;;F;i_;	@f;"transition-timing-functiono;;"¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;i ;ih;[ ;	@;0;
[ o;!;T;iw;	@;
[u;"¾[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@lineix:@keywords{ :@options{ :
@args[o:Sass::Script::Variable	;ix;
@	:@underscored_name"delay_1:
@name"delay-1;"type-of;ix:@operator:eq;
@	:@operand2o:Sass::Script::String	:
@type:identifier:@value"string;ix;
@	0[o:Sass::Tree::VariableNode:@guarded0;ix:
@expro;
;ix;	{ ;
@	;[o;	;ix;
@	;"delay_1;"delay-1;"unquote;
@	:@children[ ;"delay-1o;;0;iy;o;#
;iy;${ ;	@;%[o;&	;iy;	@;'"delay_1;"delay-1o;&	;iy;	@;'"delay_2;"delay-2o;&	;iy;	@;'"delay_3;"delay-3o;&	;iy;	@;'"delay_4;"delay-4o;&	;iy;	@;'"delay_5;"delay-5o;&	;iy;	@;'"delay_6;"delay-6o;&	;iy;	@;'"delay_7;"delay-7o;&	;iy;	@;'"delay_8;"delay-8o;&	;iy;	@;'"delay_9;"delay-9o;&	;iy;	@;'"delay_10;"delay-10;"compact;	@;
[ ;"delayso;,;i|;${ ;	@;
[ ;%[o;	;;;"transition-delay;iz;	@o;&	;iz;	@;'"delays;"delayso;	;;;"	-moz;i{;	@o;	;;;"-webkit;i{;	@o;	;;;"-o;i{;	@o;-	;.o;	;;;"-ms;i{;	@;i{;/;0;	@o;-	;.o;	;;;"-khtml;i{;	@;i{;/;0;	@o;	;;;"official;i{;	@;"experimental;%[[o;&;	{ ;'"delay_1;"delay-1o;&	;im;	@á;'"default_transition_delay;"default-transition-delay[o;&;	@á;'"delay_2;"delay-2o;;F;in;	@á[o;&;	@á;'"delay_3;"delay-3o;;F;io;	@á[o;&;	@á;'"delay_4;"delay-4o;;F;ip;	@á[o;&;	@á;'"delay_5;"delay-5o;;F;iq;	@á[o;&;	@á;'"delay_6;"delay-6o;;F;ir;	@á[o;&;	@á;'"delay_7;"delay-7o;;F;is;	@á[o;&;	@á;'"delay_8;"delay-8o;;F;it;	@á[o;&;	@á;'"delay_9;"delay-9o;;F;iu;	@á[o;&;	@á;'"delay_10;"delay-10o;;F;iv;	@á;"transition-delayo;;"*/* Transition all-in-one shorthand */;i ;i;[ ;	@;0;
[ o;!;T;i;	@;
[o;,;i;${ ;	@;
[ ;%[o;#
;i;${ ;	@;%[o;	;[	o;&	;i;	@;'"property;"propertyo;&	;i;	@;'"duration;"durationo;&	;i;	@;'"function;"functiono;&	;i;	@;'"
delay;"
delay;i;:
space;	@;"compact;"transition;%[	[o;&;	{ ;'"property;"propertyo;&	;i};	@5;'" default_transition_property;" default-transition-property[o;&;	@5;'"duration;"durationo;&	;i~;	@5;'" default_transition_duration;" default-transition-duration[o;&;	@5;'"function;"functiono;&	;i;	@5;'" default_transition_function;" default-transition-function[o;&;	@5;'"
delay;"
delayo;&	;i;	@5;'"default_transition_delay;"default-transition-delay;"single-transitiono;!;T;i;	@;
[u;"î[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@linei:@options{ :@underscored_name"transition_1:
@name"transition-1;i:@operator:eq;	@:@operand2o:Sass::Script::String	:
@type:identifier:@value"default;i;	@0[o:Sass::Tree::VariableNode:@guarded0;i:
@expro:Sass::Script::Funcall
;i:@keywords{ ;	@:
@args[o:Sass::Script::List	;[	o;	;i;	@;
" default_transition_property;" default-transition-propertyo;	;i;	@;
" default_transition_duration;" default-transition-durationo;	;i;	@;
" default_transition_function;" default-transition-functiono;	;i;	@;
"default_transition_delay;"default-transition-delay;i:@separator:
space;	@;"compact;	@:@children[ ;"transition-1o;;0;i;o;;F;i;	@;	@;
[ ;"transitionsu;"g[o:Sass::Script::Operation
:@operand1o; 
;o:Sass::Script::Funcall
:
@linei:@keywords{ :@options{ :
@args[o:Sass::Script::Variable	;i;
@
:@underscored_name"transition_1:
@name"transition-1;"type-of;i:@operator:eq;
@
:@operand2o:Sass::Script::String	:
@type:identifier:@value"	list;i;
@
;i;:and;
@
;o; 
;o;
;i;	{ ;
@
;[o;
;i;	{ ;
@
;[o;	;i;
@
;"transition_1;"transition-1o:Sass::Script::Number:@denominator_units[ ;i;i:@numerator_units[ ;
@
:@original"1;"nth;"type-of;i;;;
@
;o;	;;;"	list;i;
@
u:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:@guarded0:
@linei:
@expro:Sass::Script::Funcall
;i:@keywords{ :@options{ :
@args[o:Sass::Script::Variable	;i;@
:@underscored_name"transition_1:
@name"transition-1o;	;i;@
;"transition_2;"transition-2o;	;i;@
;"transition_3;"transition-3o;	;i;@
;"transition_4;"transition-4o;	;i;@
;"transition_5;"transition-5o;	;i;@
;"transition_6;"transition-6o;	;i;@
;"transition_7;"transition-7o;	;i;@
;"transition_8;"transition-8o;	;i;@
;"transition_9;"transition-9o;	;i;@
;"transition_10;"transition-10;"compact;@
:@children[ ;"transitions[o:Sass::Tree::VariableNode:@guarded0;i:
@expro;
;i;	{ ;
@
;[o;	;i;
@
;"transition_1;"transition-1o;
;i;	{ ;
@
;[o;	;i;
@
;"transition_2;"transition-2o;	;i;
@
;"transition_3;"transition-3o;	;i;
@
;"transition_4;"transition-4o;	;i;
@
;"transition_5;"transition-5o;	;i;
@
;"transition_6;"transition-6o;	;i;
@
;"transition_7;"transition-7o;	;i;
@
;"transition_8;"transition-8o;	;i;
@
;"transition_9;"transition-9o;	;i;
@
;"transition_10;"transition-10;"compacto;	;;;"
comma;i;
@
;"	join;
@
:@children[ ;"transitionso;;0;i;o;#
;i;${ ;	@;%[ ;"comma-list;	@;
[ ;"delayso;;0;i;o;;F;i;	@;	@;
[ ;"has-delayso;;0;i;o;#
;i;${ ;	@;%[ ;"comma-list;	@;
[ ;"webkit-valueo;;0;i;o;#
;i;${ ;	@;%[ ;"comma-list;	@;
[ ;"moz-valueo;;0;i;o;#
;i;${ ;	@;%[ ;"comma-list;	@;
[ ;"o-valueo;;"/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;i ;i ;[ ;	@;0;
[ o:Sass::Tree::EachNode:
@listo;&	;i¢;	@;'"transitions;"transitions;T;i¢;	@;
[o;;"}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;i ;i£;[ ;	@;0;
[ o;;0;i¥;o;#
;i¥;${ ;	@;%[o;&	;i¥;	@;'"transition;"transitiono;;[ ;i;i¥;[ ;	@;"1;"nth;	@;
[ ;"propertyo;;0;i¦;o;;F;i¦;	@;	@;
[ ;"durationo;;0;i§;o;;F;i§;	@;	@;
[ ;"timing-functiono;;0;i¨;o;;F;i¨;	@;	@;
[ ;"
delayu;"
[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@linei©:@keywords{ :@options{ :
@args[o:Sass::Script::Variable	;i©;
@	:@underscored_name"transition:
@name"transition;"length;i©:@operator:gt;
@	:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei;i©:@numerator_units[ ;
@	:@original"10[o:Sass::Tree::VariableNode:@guarded0;i©:
@expro;
;i©;	{ ;
@	;[o;	;i©;
@	;"transition;"transitiono;;@;i;i©;[ ;
@	;"2;"nth;
@	:@children[ ;"durationu;"[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@lineiª:@keywords{ :@options{ :
@args[o:Sass::Script::Variable	;iª;
@	:@underscored_name"transition:
@name"transition;"length;iª:@operator:gt;
@	:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei;iª:@numerator_units[ ;
@	:@original"20[o:Sass::Tree::VariableNode:@guarded0;iª:
@expro;
;iª;	{ ;
@	;[o;	;iª;
@	;"transition;"transitiono;;@;i;iª;[ ;
@	;"3;"nth;
@	:@children[ ;"timing-functionu;"M[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@linei«:@keywords{ :@options{ :
@args[o:Sass::Script::Variable	;i«;
@	:@underscored_name"transition:
@name"transition;"length;i«:@operator:gt;
@	:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei;i«:@numerator_units[ ;
@	:@original"30[o:Sass::Tree::VariableNode:@guarded0;i«:
@expro;
;i«;	{ ;
@	;[o;	;i«;
@	;"transition;"transitiono;;@;i	;i«;[ ;
@	;"4;"nth;
@	:@children[ ;"
delayo;;0;i«;o:Sass::Script::Bool;T;i«;
@	;
@	;[ ;"has-delayso;;";/* If a delay is provided without a timing function */;i ;i­;[ ;	@;0;
[ u;"^[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@linei®:@keywords{ :@options{ :
@args[o:Sass::Script::Variable	;i®;
@	:@underscored_name"timing_function:
@name"timing-function;"is-time;i®:@operator:and;
@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;i®;
@	;"
delay;"
delay;i®;:not;
@	0[o:Sass::Tree::VariableNode:@guarded0;i®:
@expro;	;i®;
@	;"timing_function;"timing-function;
@	:@children[ ;"
delayo;;0;i®;o:Sass::Script::Bool:@valueF;i®;
@	;
@	;[ ;"timing-functiono;;0;i®;o;;T;i®;
@	;
@	;[ ;"has-delayso;;"9/* Keep a list of delays in case one is specified */;i ;i°;[ ;	@;0;
[ o;;0;i±;o;#
;i±;${ ;	@;%[o;&	;i±;	@;'"delays;"delayso;#
;i±;${ ;	@;%[o;&	;i±;	@;'"
delay;"
delayo;&	;i±;	@;'"
delay;"
delayo;;[ ;i ;i±;["s;	@;"0s;"if;"append;	@;
[ ;"delayso;;0;i³;o;#
;i³;${ ;	@;%[o;&	;i³;	@;'"webkit_value;"webkit-valueo;#
;i³;${ ;	@;%[o;	;[o;#
;i³;${ ;	@;%[o;	;;;"-webkit;i³;	@o;&	;i³;	@;'"property;"property;"prefixed-for-transitiono;&	;i³;	@;'"duration;"durationo;&	;i³;	@;'"timing_function;"timing-function;i³;;1;	@;"compact;"append;	@;
[ ;"webkit-valueo;;0;i´;o;#
;i´;${ ;	@;%[o;&	;i´;	@;'"moz_value;"moz-valueo;#
;i´;${ ;	@;%[o;	;[	o;#
;i´;${ ;	@;%[o;	;;;"	-moz;i´;	@o;&	;i´;	@;'"property;"property;"prefixed-for-transitiono;&	;i´;	@;'"duration;"durationo;&	;i´;	@;'"timing_function;"timing-functiono;&	;i´;	@;'"
delay;"
delay;i´;;1;	@;"compact;"append;	@;
[ ;"moz-valueo;;0;iµ;o;#
;iµ;${ ;	@;%[o;&	;iµ;	@;'"o_value;"o-valueo;#
;iµ;${ ;	@;%[o;	;[	o;#
;iµ;${ ;	@;%[o;	;;;"-o;iµ;	@o;&	;iµ;	@;'"property;"property;"prefixed-for-transitiono;&	;iµ;	@;'"duration;"durationo;&	;iµ;	@;'"timing_function;"timing-functiono;&	;iµ;	@;'"
delay;"
delay;iµ;;1;	@;"compact;"append;	@;
[ ;"o-value:	@var"transitionu;"é[o:Sass::Script::Variable	:
@linei¸:@options{ :@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit0[o:Sass::Tree::PropNode:
@tabsi :@prop_syntax:new:@valueo; 	;i¸;@;"webkit_value;	"webkit-value;i¸;@:@children[ ;	["-webkit-transitiono:Sass::Tree::CommentNode;"j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */:@silenti ;i¹:@lines[ ;@:
@loud0;[ u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@lineiº:@options{ :@underscored_name"has_delays:
@name"has-delays0[o:Sass::Tree::PropNode:
@tabsi :@prop_syntax:new:@valueo; 	;iº;@;"delays;	"delays;iº;@:@children[ ;	["-webkit-transition-delayu;"#[o:Sass::Script::Variable	:
@linei»:@options{ :@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla0[o:Sass::Tree::PropNode:
@tabsi :@prop_syntax:new:@valueo; 	;i»;@;"moz_value;	"moz-value;i»;@:@children[ ;	["-moz-transitionu;"[o:Sass::Script::Variable	:
@linei¼:@options{ :@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera0[o:Sass::Tree::PropNode:
@tabsi :@prop_syntax:new:@valueo; 	;i¼;@;"o_value;	"o-value;i¼;@:@children[ ;	["-o-transitiono;(;)i ;*;+;o;&	;i½;	@;'"transitions;"transitions;i½;	@;
[ ;["transition;%[[o;&;	{ ;'"transition_1;"transition-1o;	;;;"default;i;	@6[o;&;	@6;'"transition_2;"transition-2o;;F;i;	@6[o;&;	@6;'"transition_3;"transition-3o;;F;i;	@6[o;&;	@6;'"transition_4;"transition-4o;;F;i;	@6[o;&;	@6;'"transition_5;"transition-5o;;F;i;	@6[o;&;	@6;'"transition_6;"transition-6o;;F;i;	@6[o;&;	@6;'"transition_7;"transition-7o;;F;i;	@6[o;&;	@6;'"transition_8;"transition-8o;;F;i;	@6[o;&;	@6;'"transition_9;"transition-9o;;F;i;	@6[o;&;	@6;'"transition_10;"transition-10o;;F;i;	@6;"transitiono;;"Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;i ;iÀ;[ ;	@;0;
[ o:Sass::Tree::FunctionNode;T;iÁ;	@;
[o:Sass::Tree::ReturnNode	;iÂ;o;#
;iÂ;${ ;	@;%[o;	;[ ;iÂ;;1;	@o;&	;iÂ;	@;'"	list;"	listo;	;;;"
comma;iÂ;	@;"	join;	@;
[ ;%[[o;&;	@;'"	list;"	listo;	;[ ;iÁ;;1;	@;"comma-listo;;"i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;i ;iÅ;[ ;	@;0;
[ o;5;T;iÆ;	@;
[u;"[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@lineiÇ:@keywords{ :@options{ :
@args[o:Sass::Script::Variable	;iÇ;
@	:@underscored_name"property:
@name"property;"type-of;iÇ:@operator:eq;
@	:@operand2o:Sass::Script::String	:
@type:identifier:@value"	list;iÇ;
@	u:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:
@lineiÎ:@keywords{ :@options{ :
@args[o:Sass::Script::Variable	;iÎ;@:@underscored_name"#transitionable_prefixed_values:
@name"#transitionable-prefixed-valueso;
	;iÎ;@;"property;"property;"
indexu:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@lineiÑ:
@expro:Sass::Script::Variable	;iÑ:@options{ :@underscored_name"property:
@name"property;	@	:@children[ [o:Sass::Tree::ReturnNode	;iÏ:
@expro: Sass::Script::Interpolation:@aftero;;0;iÏ:@originally_textF:	@mido;
	;iÏ;@;"property;"property;@:@whitespace_after0:@beforeo;;0;iÏ;:originally_text;o:Sass::Script::String	:
@type:identifier:@value"-;iÏ;@;@;F;0:@whitespace_before0;0;iÏ;F;o;
	;iÏ;@;"prefix;"prefix;@;0;0;i;@:@children[ [o:Sass::Tree::VariableNode:@guarded0;iÈ:
@expro;
;iÈ;	{ ;
@	;[ ;"comma-list;
@	:@children[ ;"new-listo:Sass::Tree::EachNode:
@listo;	;iÉ;
@	;"property;"property:@has_childrenT;iÉ;
@	;[o;;0;iÊ;o;
;iÊ;	{ ;
@	;[o;	;iÊ;
@	;"new_list;"new-listo;
;iÊ;	{ ;
@	;[o;	;iÊ;
@	;"prefix;"prefixo;	;iÊ;
@	;"v;"v;"prefixed-for-transition;"append;
@	;[ ;"new-list:	@var"vo:Sass::Tree::ReturnNode	;iÌ;o;	;iÌ;
@	;"new_list;"new-list;
@	;[ ;%[[o;&;	@;'"prefix;"prefix0[o;&;	@;'"property;"property0;"prefixed-for-transitiono;;"7/* Checks if the value given is a unit of time. */;i ;iÖ;[ ;	@;0;
[ o;5;T;i×;	@;
[u;"ù[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@lineiØ:@keywords{ :@options{ :
@args[o:Sass::Script::Variable	;iØ;
@	:@underscored_name"
value:
@name"
value;"type-of;iØ:@operator:eq;
@	:@operand2o:Sass::Script::String	:
@type:identifier:@value"number;iØ;
@	u:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@lineiÛ:
@expro:Sass::Script::Bool:@valueF;iÛ:@options{ ;
@	:@children[ [o:Sass::Tree::ReturnNode	;iÙ:
@expro:!Sass::Script::UnaryOperation	:@operando;	;o;
;iÙ;	{ ;
@	;[o:Sass::Script::List	;[o;	;;;"s;iÙ;
@	o;	;;;"ms;iÙ;
@	;iÙ:@separator:
space;
@	o;
;iÙ;	{ ;
@	;[o;	;iÙ;
@	;"
value;"
value;"	unit;"
index;iÙ;:not;
@	;iÙ;;;
@	;
@	:@children[ ;%[[o;&;	@;'"
value;"
value0;"is-time